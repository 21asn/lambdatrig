AWSTemplateFormatVersion: '2010-09-09'
Description: S3 event triggers Lambda function and takes the data of JSON in S3 and write it to Dynamodb

Resources:
  LambdaFunction: 
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: lambda-function-s3-events
      Code:
        ZipFile: |
          import boto3
          import json
          s3_client = boto3.client('s3')
          dynamodb = boto3.resource('dynamodb')
          def lambda_handler(event, context):
            bucket = event['Records'][0]['s3']['bucket']['name']
            json_file_name = event['Records'][0]['s3']['object']['key']
            json_object = s3_client.get_object(Bucket=bucket,Key=json_file_name)
            jsonFileReader = json_object['Body'].read()
            jsonDict = json.loads(jsonFileReader)
            table = dynamodb.Table('test')
            table.put_item(Item=jsonDict)
      Handler: index.lambda_handler
      Role: "arn:aws:iam::017595850813:role/lambdatrigger"
      Runtime: python3.6
      Timeout: 5

  S3InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::${S3LamdaBucket}

  S3LamdaBucket:
    Type: AWS::S3::Bucket 
    Properties:
      BucketName: s3-lambda-east-dynamodb
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: "s3:ObjectCreated:*"
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .json
            Function: !GetAtt LambdaFunction.Arn

  
